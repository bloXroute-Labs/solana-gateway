// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.3
// source: sdn.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GatewayEventType int32

const (
	GatewayEventType_CONNECT    GatewayEventType = 0
	GatewayEventType_DISCONNECT GatewayEventType = 1
	GatewayEventType_BAN        GatewayEventType = 2
)

// Enum value maps for GatewayEventType.
var (
	GatewayEventType_name = map[int32]string{
		0: "CONNECT",
		1: "DISCONNECT",
		2: "BAN",
	}
	GatewayEventType_value = map[string]int32{
		"CONNECT":    0,
		"DISCONNECT": 1,
		"BAN":        2,
	}
)

func (x GatewayEventType) Enum() *GatewayEventType {
	p := new(GatewayEventType)
	*p = x
	return p
}

func (x GatewayEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GatewayEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_sdn_proto_enumTypes[0].Descriptor()
}

func (GatewayEventType) Type() protoreflect.EnumType {
	return &file_sdn_proto_enumTypes[0]
}

func (x GatewayEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GatewayEventType.Descriptor instead.
func (GatewayEventType) EnumDescriptor() ([]byte, []int) {
	return file_sdn_proto_rawDescGZIP(), []int{0}
}

type RelayEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId string   `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Payload *Payload `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"` // flexible payload
}

func (x *RelayEvent) Reset() {
	*x = RelayEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayEvent) ProtoMessage() {}

func (x *RelayEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayEvent.ProtoReflect.Descriptor instead.
func (*RelayEvent) Descriptor() ([]byte, []int) {
	return file_sdn_proto_rawDescGZIP(), []int{0}
}

func (x *RelayEvent) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *RelayEvent) GetPayload() *Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

// Generic payload structure
type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*Payload_GatewayConnect
	//	*Payload_GatewayDisconnect
	//	*Payload_GatewayBan
	//	*Payload_ConnectedGateways
	Content isPayload_Content `protobuf_oneof:"content"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_sdn_proto_rawDescGZIP(), []int{1}
}

func (m *Payload) GetContent() isPayload_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Payload) GetGatewayConnect() *GatewayConnectEvent {
	if x, ok := x.GetContent().(*Payload_GatewayConnect); ok {
		return x.GatewayConnect
	}
	return nil
}

func (x *Payload) GetGatewayDisconnect() *GatewayDisconnectEvent {
	if x, ok := x.GetContent().(*Payload_GatewayDisconnect); ok {
		return x.GatewayDisconnect
	}
	return nil
}

func (x *Payload) GetGatewayBan() *GatewayBanEvent {
	if x, ok := x.GetContent().(*Payload_GatewayBan); ok {
		return x.GatewayBan
	}
	return nil
}

func (x *Payload) GetConnectedGateways() *ConnectedGatewaysEvent {
	if x, ok := x.GetContent().(*Payload_ConnectedGateways); ok {
		return x.ConnectedGateways
	}
	return nil
}

type isPayload_Content interface {
	isPayload_Content()
}

type Payload_GatewayConnect struct {
	GatewayConnect *GatewayConnectEvent `protobuf:"bytes,1,opt,name=gateway_connect,json=gatewayConnect,proto3,oneof"`
}

type Payload_GatewayDisconnect struct {
	GatewayDisconnect *GatewayDisconnectEvent `protobuf:"bytes,2,opt,name=gateway_disconnect,json=gatewayDisconnect,proto3,oneof"`
}

type Payload_GatewayBan struct {
	GatewayBan *GatewayBanEvent `protobuf:"bytes,3,opt,name=gateway_ban,json=gatewayBan,proto3,oneof"`
}

type Payload_ConnectedGateways struct {
	ConnectedGateways *ConnectedGatewaysEvent `protobuf:"bytes,4,opt,name=connected_gateways,json=connectedGateways,proto3,oneof"`
}

func (*Payload_GatewayConnect) isPayload_Content() {}

func (*Payload_GatewayDisconnect) isPayload_Content() {}

func (*Payload_GatewayBan) isPayload_Content() {}

func (*Payload_ConnectedGateways) isPayload_Content() {}

type ConnectedGatewaysEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectedGateways []*GatewayConnectEvent `protobuf:"bytes,1,rep,name=connected_gateways,json=connectedGateways,proto3" json:"connected_gateways,omitempty"`
}

func (x *ConnectedGatewaysEvent) Reset() {
	*x = ConnectedGatewaysEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedGatewaysEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedGatewaysEvent) ProtoMessage() {}

func (x *ConnectedGatewaysEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedGatewaysEvent.ProtoReflect.Descriptor instead.
func (*ConnectedGatewaysEvent) Descriptor() ([]byte, []int) {
	return file_sdn_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectedGatewaysEvent) GetConnectedGateways() []*GatewayConnectEvent {
	if x != nil {
		return x.ConnectedGateways
	}
	return nil
}

type GatewayConnectEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthHeader  string `protobuf:"bytes,1,opt,name=auth_header,json=authHeader,proto3" json:"auth_header,omitempty"` // to extract the account
	Ip          string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	ConnectedAt int64  `protobuf:"varint,3,opt,name=connected_at,json=connectedAt,proto3" json:"connected_at,omitempty"`
}

func (x *GatewayConnectEvent) Reset() {
	*x = GatewayConnectEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayConnectEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayConnectEvent) ProtoMessage() {}

func (x *GatewayConnectEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayConnectEvent.ProtoReflect.Descriptor instead.
func (*GatewayConnectEvent) Descriptor() ([]byte, []int) {
	return file_sdn_proto_rawDescGZIP(), []int{3}
}

func (x *GatewayConnectEvent) GetAuthHeader() string {
	if x != nil {
		return x.AuthHeader
	}
	return ""
}

func (x *GatewayConnectEvent) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GatewayConnectEvent) GetConnectedAt() int64 {
	if x != nil {
		return x.ConnectedAt
	}
	return 0
}

type GatewayDisconnectEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthHeader string `protobuf:"bytes,1,opt,name=auth_header,json=authHeader,proto3" json:"auth_header,omitempty"` // to extract the account
	Ip         string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *GatewayDisconnectEvent) Reset() {
	*x = GatewayDisconnectEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayDisconnectEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayDisconnectEvent) ProtoMessage() {}

func (x *GatewayDisconnectEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayDisconnectEvent.ProtoReflect.Descriptor instead.
func (*GatewayDisconnectEvent) Descriptor() ([]byte, []int) {
	return file_sdn_proto_rawDescGZIP(), []int{4}
}

func (x *GatewayDisconnectEvent) GetAuthHeader() string {
	if x != nil {
		return x.AuthHeader
	}
	return ""
}

func (x *GatewayDisconnectEvent) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type GatewayBanEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthHeader  string                 `protobuf:"bytes,1,opt,name=auth_header,json=authHeader,proto3" json:"auth_header,omitempty"` // to extract the account
	Ip          string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	BannedUntil *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=banned_until,json=bannedUntil,proto3" json:"banned_until,omitempty"`
}

func (x *GatewayBanEvent) Reset() {
	*x = GatewayBanEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayBanEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayBanEvent) ProtoMessage() {}

func (x *GatewayBanEvent) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayBanEvent.ProtoReflect.Descriptor instead.
func (*GatewayBanEvent) Descriptor() ([]byte, []int) {
	return file_sdn_proto_rawDescGZIP(), []int{5}
}

func (x *GatewayBanEvent) GetAuthHeader() string {
	if x != nil {
		return x.AuthHeader
	}
	return ""
}

func (x *GatewayBanEvent) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GatewayBanEvent) GetBannedUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.BannedUntil
	}
	return nil
}

type RelayEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId  string    `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Response *Response `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *RelayEventResponse) Reset() {
	*x = RelayEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RelayEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayEventResponse) ProtoMessage() {}

func (x *RelayEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayEventResponse.ProtoReflect.Descriptor instead.
func (*RelayEventResponse) Descriptor() ([]byte, []int) {
	return file_sdn_proto_rawDescGZIP(), []int{6}
}

func (x *RelayEventResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *RelayEventResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

// Generic response structure
type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Content:
	//	*Response_Empty
	//	*Response_GatewayConnectResponse
	//	*Response_GatewayDisconnectResponse
	//	*Response_GatewayBanResponse
	//	*Response_GatewayDisconnectRequest
	Content isResponse_Content `protobuf_oneof:"content"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_sdn_proto_rawDescGZIP(), []int{7}
}

func (m *Response) GetContent() isResponse_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Response) GetEmpty() *emptypb.Empty {
	if x, ok := x.GetContent().(*Response_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *Response) GetGatewayConnectResponse() *GatewayConnectEventResponse {
	if x, ok := x.GetContent().(*Response_GatewayConnectResponse); ok {
		return x.GatewayConnectResponse
	}
	return nil
}

func (x *Response) GetGatewayDisconnectResponse() *GatewayDisconnectEventResponse {
	if x, ok := x.GetContent().(*Response_GatewayDisconnectResponse); ok {
		return x.GatewayDisconnectResponse
	}
	return nil
}

func (x *Response) GetGatewayBanResponse() *GatewayBanEventResponse {
	if x, ok := x.GetContent().(*Response_GatewayBanResponse); ok {
		return x.GatewayBanResponse
	}
	return nil
}

func (x *Response) GetGatewayDisconnectRequest() *GatewayDisconnectEventRequest {
	if x, ok := x.GetContent().(*Response_GatewayDisconnectRequest); ok {
		return x.GatewayDisconnectRequest
	}
	return nil
}

type isResponse_Content interface {
	isResponse_Content()
}

type Response_Empty struct {
	Empty *emptypb.Empty `protobuf:"bytes,1,opt,name=empty,proto3,oneof"`
}

type Response_GatewayConnectResponse struct {
	GatewayConnectResponse *GatewayConnectEventResponse `protobuf:"bytes,2,opt,name=gateway_connect_response,json=gatewayConnectResponse,proto3,oneof"`
}

type Response_GatewayDisconnectResponse struct {
	GatewayDisconnectResponse *GatewayDisconnectEventResponse `protobuf:"bytes,3,opt,name=gateway_disconnect_response,json=gatewayDisconnectResponse,proto3,oneof"`
}

type Response_GatewayBanResponse struct {
	GatewayBanResponse *GatewayBanEventResponse `protobuf:"bytes,4,opt,name=gateway_ban_response,json=gatewayBanResponse,proto3,oneof"`
}

type Response_GatewayDisconnectRequest struct {
	GatewayDisconnectRequest *GatewayDisconnectEventRequest `protobuf:"bytes,5,opt,name=gateway_disconnect_request,json=gatewayDisconnectRequest,proto3,oneof"`
}

func (*Response_Empty) isResponse_Content() {}

func (*Response_GatewayConnectResponse) isResponse_Content() {}

func (*Response_GatewayDisconnectResponse) isResponse_Content() {}

func (*Response_GatewayBanResponse) isResponse_Content() {}

func (*Response_GatewayDisconnectRequest) isResponse_Content() {}

type GatewayConnectEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsAllowed       bool   `protobuf:"varint,1,opt,name=is_allowed,json=isAllowed,proto3" json:"is_allowed,omitempty"`
	AccountId       string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	AccountTier     string `protobuf:"bytes,3,opt,name=account_tier,json=accountTier,proto3" json:"account_tier,omitempty"`
	RejectionReason string `protobuf:"bytes,4,opt,name=rejection_reason,json=rejectionReason,proto3" json:"rejection_reason,omitempty"` // for the client
	Message         string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`                                        // for internal use
}

func (x *GatewayConnectEventResponse) Reset() {
	*x = GatewayConnectEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayConnectEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayConnectEventResponse) ProtoMessage() {}

func (x *GatewayConnectEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayConnectEventResponse.ProtoReflect.Descriptor instead.
func (*GatewayConnectEventResponse) Descriptor() ([]byte, []int) {
	return file_sdn_proto_rawDescGZIP(), []int{8}
}

func (x *GatewayConnectEventResponse) GetIsAllowed() bool {
	if x != nil {
		return x.IsAllowed
	}
	return false
}

func (x *GatewayConnectEventResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GatewayConnectEventResponse) GetAccountTier() string {
	if x != nil {
		return x.AccountTier
	}
	return ""
}

func (x *GatewayConnectEventResponse) GetRejectionReason() string {
	if x != nil {
		return x.RejectionReason
	}
	return ""
}

func (x *GatewayConnectEventResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GatewayDisconnectEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GatewayDisconnectEventResponse) Reset() {
	*x = GatewayDisconnectEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayDisconnectEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayDisconnectEventResponse) ProtoMessage() {}

func (x *GatewayDisconnectEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayDisconnectEventResponse.ProtoReflect.Descriptor instead.
func (*GatewayDisconnectEventResponse) Descriptor() ([]byte, []int) {
	return file_sdn_proto_rawDescGZIP(), []int{9}
}

type GatewayBanEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GatewayBanEventResponse) Reset() {
	*x = GatewayBanEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayBanEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayBanEventResponse) ProtoMessage() {}

func (x *GatewayBanEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayBanEventResponse.ProtoReflect.Descriptor instead.
func (*GatewayBanEventResponse) Descriptor() ([]byte, []int) {
	return file_sdn_proto_rawDescGZIP(), []int{10}
}

type GatewayDisconnectEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayIp string `protobuf:"bytes,1,opt,name=gateway_ip,json=gatewayIp,proto3" json:"gateway_ip,omitempty"`
	Reason    string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *GatewayDisconnectEventRequest) Reset() {
	*x = GatewayDisconnectEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GatewayDisconnectEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayDisconnectEventRequest) ProtoMessage() {}

func (x *GatewayDisconnectEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayDisconnectEventRequest.ProtoReflect.Descriptor instead.
func (*GatewayDisconnectEventRequest) Descriptor() ([]byte, []int) {
	return file_sdn_proto_rawDescGZIP(), []int{11}
}

func (x *GatewayDisconnectEventRequest) GetGatewayIp() string {
	if x != nil {
		return x.GatewayIp
	}
	return ""
}

func (x *GatewayDisconnectEventRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_sdn_proto protoreflect.FileDescriptor

var file_sdn_proto_rawDesc = []byte{
	0x0a, 0x09, 0x73, 0x64, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x73, 0x64, 0x6e,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f,
	0x0a, 0x0a, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0xae, 0x02, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x0e, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x12, 0x4c, 0x0a, 0x12, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x64, 0x6e, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x11, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x37,
	0x0a, 0x0b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x42, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x12, 0x4c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x61, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x12, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x11, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x73, 0x22, 0x69, 0x0a, 0x13, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x49,
	0x0a, 0x16, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x75, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x81, 0x01, 0x0a, 0x0f, 0x47, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x3d,
	0x0a, 0x0c, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x22, 0x5a, 0x0a,
	0x12, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc0, 0x03, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x18, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x1b, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x19, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x14, 0x67,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x64, 0x6e, 0x2e,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42, 0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a,
	0x1a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xc3, 0x01, 0x0a,
	0x1b, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x69, 0x65, 0x72, 0x12, 0x29, 0x0a,
	0x10, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x42,
	0x61, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x56, 0x0a, 0x1d, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2a, 0x38, 0x0a, 0x10, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x44, 0x49, 0x53, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x41, 0x4e, 0x10,
	0x02, 0x32, 0x4f, 0x0a, 0x03, 0x53, 0x44, 0x4e, 0x12, 0x48, 0x0a, 0x16, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x0f, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x64, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x79, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x30, 0x01, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x62, 0x6c, 0x6f, 0x58, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f,
	0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2d, 0x62, 0x64, 0x6e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sdn_proto_rawDescOnce sync.Once
	file_sdn_proto_rawDescData = file_sdn_proto_rawDesc
)

func file_sdn_proto_rawDescGZIP() []byte {
	file_sdn_proto_rawDescOnce.Do(func() {
		file_sdn_proto_rawDescData = protoimpl.X.CompressGZIP(file_sdn_proto_rawDescData)
	})
	return file_sdn_proto_rawDescData
}

var file_sdn_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sdn_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_sdn_proto_goTypes = []interface{}{
	(GatewayEventType)(0),                  // 0: sdn.GatewayEventType
	(*RelayEvent)(nil),                     // 1: sdn.RelayEvent
	(*Payload)(nil),                        // 2: sdn.Payload
	(*ConnectedGatewaysEvent)(nil),         // 3: sdn.ConnectedGatewaysEvent
	(*GatewayConnectEvent)(nil),            // 4: sdn.GatewayConnectEvent
	(*GatewayDisconnectEvent)(nil),         // 5: sdn.GatewayDisconnectEvent
	(*GatewayBanEvent)(nil),                // 6: sdn.GatewayBanEvent
	(*RelayEventResponse)(nil),             // 7: sdn.RelayEventResponse
	(*Response)(nil),                       // 8: sdn.Response
	(*GatewayConnectEventResponse)(nil),    // 9: sdn.GatewayConnectEventResponse
	(*GatewayDisconnectEventResponse)(nil), // 10: sdn.GatewayDisconnectEventResponse
	(*GatewayBanEventResponse)(nil),        // 11: sdn.GatewayBanEventResponse
	(*GatewayDisconnectEventRequest)(nil),  // 12: sdn.GatewayDisconnectEventRequest
	(*timestamppb.Timestamp)(nil),          // 13: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                  // 14: google.protobuf.Empty
}
var file_sdn_proto_depIdxs = []int32{
	2,  // 0: sdn.RelayEvent.payload:type_name -> sdn.Payload
	4,  // 1: sdn.Payload.gateway_connect:type_name -> sdn.GatewayConnectEvent
	5,  // 2: sdn.Payload.gateway_disconnect:type_name -> sdn.GatewayDisconnectEvent
	6,  // 3: sdn.Payload.gateway_ban:type_name -> sdn.GatewayBanEvent
	3,  // 4: sdn.Payload.connected_gateways:type_name -> sdn.ConnectedGatewaysEvent
	4,  // 5: sdn.ConnectedGatewaysEvent.connected_gateways:type_name -> sdn.GatewayConnectEvent
	13, // 6: sdn.GatewayBanEvent.banned_until:type_name -> google.protobuf.Timestamp
	8,  // 7: sdn.RelayEventResponse.response:type_name -> sdn.Response
	14, // 8: sdn.Response.empty:type_name -> google.protobuf.Empty
	9,  // 9: sdn.Response.gateway_connect_response:type_name -> sdn.GatewayConnectEventResponse
	10, // 10: sdn.Response.gateway_disconnect_response:type_name -> sdn.GatewayDisconnectEventResponse
	11, // 11: sdn.Response.gateway_ban_response:type_name -> sdn.GatewayBanEventResponse
	12, // 12: sdn.Response.gateway_disconnect_request:type_name -> sdn.GatewayDisconnectEventRequest
	1,  // 13: sdn.SDN.StreamRelayConnections:input_type -> sdn.RelayEvent
	7,  // 14: sdn.SDN.StreamRelayConnections:output_type -> sdn.RelayEventResponse
	14, // [14:15] is the sub-list for method output_type
	13, // [13:14] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_sdn_proto_init() }
func file_sdn_proto_init() {
	if File_sdn_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sdn_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedGatewaysEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayConnectEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayDisconnectEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayBanEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RelayEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayConnectEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayDisconnectEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayBanEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GatewayDisconnectEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sdn_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Payload_GatewayConnect)(nil),
		(*Payload_GatewayDisconnect)(nil),
		(*Payload_GatewayBan)(nil),
		(*Payload_ConnectedGateways)(nil),
	}
	file_sdn_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Response_Empty)(nil),
		(*Response_GatewayConnectResponse)(nil),
		(*Response_GatewayDisconnectResponse)(nil),
		(*Response_GatewayBanResponse)(nil),
		(*Response_GatewayDisconnectRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sdn_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sdn_proto_goTypes,
		DependencyIndexes: file_sdn_proto_depIdxs,
		EnumInfos:         file_sdn_proto_enumTypes,
		MessageInfos:      file_sdn_proto_msgTypes,
	}.Build()
	File_sdn_proto = out.File
	file_sdn_proto_rawDesc = nil
	file_sdn_proto_goTypes = nil
	file_sdn_proto_depIdxs = nil
}
