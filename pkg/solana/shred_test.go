package solana

import (
	"encoding/hex"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

var zeroShred = [1228]byte{}

const (
	validShred   = "70e047ac0fdb7184433366573a06adcbcd8ae5927ea440bb004102fbc2ea13b591bcd0729a27d09aea35bcdd0618d89dc01f17c38a30cb868efd7dd1c527670786ec3700140000000056030000adc34c0300000100383b04e09a6ddb9c90606996ef52f3d41d59b0650761481d357474bb7c4d7624ebd3bdb3d8355e73d11043fc0da353800000000024036c1acb9e4ed0a2a97254d2020e835dca3ef8f6703441d737dff76a801769010202010094010e000000cc370014000000001f011f011e011d011c011b011a0119011801170116011501140113011201110110010f010e010d010c010b010a010901080107010601050104010301020101528d4861e050b3be50d88301714068a82958a39ff6353ab845723d3cd5a89bcf0129010a68000000003d9b5cf71fde44ebc60c87046f9739f30672e20a6e3dcfc52fadedc4f9d07d58019669377e7047c212a9247828d17e6fead4e56b7984788a30d52d70f61615c6457c04fbb5cdb08c336d72ef71baa9823524246d207479e90add6a84cf4f23ce0801000103deb8ad1aa60a8c583445240c5d72ae1fe859b43d1620f03761cc06cc6970760b9fb59a03bf586221436d5a3b0e9d782a782f65207ccbd42c3dd707b1c2c931440761481d357474bb7c4d7624ebd3bdb3d8355e73d11043fc0da353800000000024036c1acb9e4ed0a2a97254d2020e835dca3ef8f6703441d737dff76a801769010202010094010e000000cc370014000000001f011f011e011d011c011b011a0119011801170116011501140113011201110110010f010e010d010c010b010a010901080107010601050104010301020101528d4861e050b3be50d88301714068a82958a39ff6353ab845723d3cd5a89bcf0129010a68000000003d9b5cf71fde44ebc60c87046f9739f30672e20a6e3dcfc52fadedc4f9d07d580108d8d0af82a3b102ec13bff278e5f796e92b7c5d9f12dc2e42f5c3ab2bda786885cc3a46dbb2ab1c79254afad00974dc1625cb76ea7fea3b54b71d597704d90701000103b94ee76f80aa85cfca398959f912c2154ce16bc7e5df8a93d98e6bb5acb93cb3ffc1332aef4cebe8dddddfe1f14d17939bb470e34938e29788b0830c32cce08d0761481d357474bb7c4d7624ebd3bdb3d8355e73d11043fc0da353800000000024036c1acb9e4ed0a2a97254d2020e835dca3ef8f6703441d737dff76a801769010202010094010e000000cc370014000000001f011f011e011d011c011b011a0119011801170116011501140113011201110110010f010e010d010c010b010a010901080107010601050104010301020101528d4861e050b3be50d88301714068a82958a39ff6353ab845723d3cd5a89bcf0129010a68000000003d9b5cf71fde44ebc60c87046f9739f30672e20a6e3dcfc52fadedc4f9d07d5801fc5847dc46c902472d0680919c102dd0417a882b93b75aab845cc6e79e0b9434ea9ce05db8165818347c64240f7f75c00d5ffd09add647c59122fff756929b6ccb1756e0387153c7ba4333825b5b1f0e2cf6b19d11e63f4294356d33c263a9dbaea6b54537ba49f4cc473ad4bf91285b584508b2ec4a733e55fe03d0b6dbaacd88cb1fc17b5a44dc65fd062688259c1384528042873547ade17b8d87daedb8dd0f7792a08a05fda8c7bb4ec1b18f7a695f592902fff3899502ab9807803a7ff54e4653d0201148"
	invalidShred = "0200000031aed1f835cb7b064da1a55f66c511fa215ca68a6efb5b0e427a6f49d280d4ac050000000000000016389c90aac7f312421c4f5789079a7c8a70d09f9ca5b12f54881d7c58b93c4793c0a9849da4cc1479383a3447f9f4d9f857e3b4660c6b44e99c29c37279f905080000002fe45ebfd59ee1b71bbb951ad807b7882342464dda469e75876133d0e39b96f76b073efc9501000019cc3dfc950100009075569f3443b500e88d7ce54052b4d20594858331b9348218f74db4edec8eba520fd28a95f14815280b5b9d63b80b20bbe1e035f14377c96fd01459503d5f99208a113a683c7a07010000000c99b6a75c85596a677e2a1c998aa6a9147f4864d2cc593b326d39a6c2d51249d301d955f432de843a6b6994e7a8cf24cc90985e80b16641cefb35747824051069acd493e962eef8382f817926ec296326247c05ebeb055b5704f97b69ced65812000100010399b6a75c85596a677e2a1c998aa6a9147f4864d2cc593b326d39a6c2d51249d37492f35f9b14211398dd309bb46a5a815531606175e1903406651e9c857c12410761481d357474bb7c4d7624ebd3bdb3d8355e73d11043fc0da3538000000000285d84258a3f622549fb9e93200f3124dba5542fd5c197213056ac167a67a91e010202010094010e000000ba6abb13000000001f011f011e011d011c011b011a0119011801170116011501140113011201110110010f010e010d010c010b010a010901080107010601050704010301020101cf39a2f50504b0e131ff0eea6590af6ae8d9ecc170162ce0cbd856a1d76babda016ea7ee6700000000e31600e4d2da2022b0d8e90c8754d4775dc968209948f826ee1999985491e09761073efc95010000255b0ec27c67b00c1ad68523557dd12df3ac9e34652adc4f4b41fb7e99a5e597a662025af2e1ffb885df59c2397d6295dc32d6968e305544ec346c832bc704060a000000459eb20ccf78d19c69cb834df311bdc6a358784b314d8333b615192030b14439fb1fbb1300000000c21825dd371205e23d96c3b3b7a2b0b03f5edc3f8a8b67f02c11b1ccda7c099d01000000000000002d6abb13000000002e02349c6ee94e76490bb3e2ae1505c0da16d5f2900bf82dc78e6520751c92c229053efc950100000156a4ae5b8a8759e7ec45e76ef2b5189e91228ffbc1f30553197f6229b39bca9a21ddc7324ff4c05bacb3e19c5f1ffa9cb2e93fde0a8f872436c1f45d1f000d00000000915c07f8fa2c46d611316a39518c96cbc7608d68b698e7ae79ce8232a73250130000000005c7a52b401f0000000005c7a52b411f0000000005c7a52b421f0000000005c7a52b4c1f0000000005c7a52b431f0000000005c7a52b441f0000000005c7a52b451f00000000000000000000000000000000000000000000000005c7a52b4b1f5c073efc95010000adc3b261c9b9a5bd1959a5fb028bfc0678547c238c33a51a32a4b4f9fbf6d0641972899ee8ddcd6e9a4f663bceb427f986ceb3c30d1114d403334571dac727cdf7040b000000915c07f8fa2c46d611316a39518c96cbc7608d68b698e7ae79ce8232a7325013dc8ef8e1df3255ebe54a10300600adc302010e0000000045d5fdc203010000000005c7a52b0a0000c03e0a00010b000105000106000109000108000407000104000101000100b478fb5c7adb21ffdd5c33524422dc172ae168a9cb532f"
)

func TestValidShred(t *testing.T) {
	data, err := hex.DecodeString(validShred)
	require.NoError(t, err)
	shred, err := ParseShredPartial(toFixedArray1228(data), len(data))
	assert.NoError(t, err)
	assert.NotEqual(t, zeroShred, shred.Raw)
}

func TestInvalidShred(t *testing.T) {
	data, err := hex.DecodeString(invalidShred)
	require.NoError(t, err)
	shred, err := ParseShredPartial(toFixedArray1228(data), len(data))
	assert.Error(t, err)
	require.Contains(t, err.Error(), "shred index is too big")
	assert.NotNil(t, shred)
	assert.Equal(t, zeroShred, shred.Raw)
}

func toFixedArray1228(b []byte) [1228]byte {
	var arr [1228]byte
	copy(arr[:], b)
	return arr
}
